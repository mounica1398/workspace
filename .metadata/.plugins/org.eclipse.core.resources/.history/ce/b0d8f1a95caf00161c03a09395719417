package ds;
import java.util.Scanner;
public class Driver {
	private static Scanner s;

	public static void main(String [] args)
	{
		s = new Scanner(System.in);
		BST b = new BST();
		char ch;
		System.out.println("Binary Search Tree");
		b.root = b.insert(b.root, 4);
		b.root = b.insert(b.root, 2);
		b.root = b.insert(b.root, 6);
		b.root = b.insert(b.root, 1);
		b.root = b.insert(b.root, 3);
		b.root = b.insert(b.root, 5);
		b.root = b.insert(b.root, 7);
		b.inorder(b.root);
		System.out.println();
		System.out.println("Pre order Traversal");
		b.preorder(b.root);
		System.out.println();
		System.out.println("Post order Traversal");
		b.postorder(b.root);
		System.out.println();
		//search
		System.out.println("Search");
		do
		{
			int key = s.nextInt();
			Tnode node = b.Search(b.root,key);
			if(node == null)
				System.out.println("key not found");
			else if(node.data == key)
				System.out.println("key found");
			System.out.println("do you want to continue?");
			ch = s.next().charAt(0);
		}while(ch == 'y');
		//delete
		System.out.println("Delete");
		do
		{
			if(b.root == null)
				System.out.println("cannot be deleted");
			b.root = b.Delete(b.root,s.nextInt());
			b.inorder(b.root);
			System.out.println("do you want to continue?");
			ch = s.next().charAt(0);	
		}while(ch == 'y');
		//height
		int height = b.height(b.root);
		System.out.println("Height of tree : " +"" + (height-1));
		Tnode node = b.getNode(b.root,6);
		int h = b.height(node);
		System.out.println("Height of "+  node+ " :" + (h-1) );
		
	}

}
